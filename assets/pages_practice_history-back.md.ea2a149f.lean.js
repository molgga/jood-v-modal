import{u as b,_ as f,M as y,v as _,b as m,F as a,t as r,O as p,L as i,e as v,f as D,a0 as F,R as S}from"./chunks/framework.0733a824.js";import{u as H,a as k,H as $}from"./chunks/JdModalEntry.3c7cb9b1.js";const w=s=>`jd-modal=${s}`,I=s=>new RegExp(`#${s}$`),C=s=>{const e=s.replace(/(.*(:?#jd-modal=(\d+)))$/,"$3"),t=parseInt(e);return isNaN(t)?null:t};class U{createEntry(e){return R(e)}}const R=({modalRef:s})=>{let e=!1;const t=w(s.id),c=I(t),d=()=>{location.hash=t,e=!0,window.addEventListener("hashchange",o)},h=()=>{window.removeEventListener("hashchange",o),e&&c.test(location.hash)&&history.back()},o=l=>{if(l._preventModalClose||!e||!c.test(l.oldURL))return;const u=C(l.oldURL),g=C(l.newURL);let n=!1;g===null?n=!0:u===null?n=!1:g<u&&(n=!0),n&&s.close()};return{touch:d,pop:h}},T=b({setup(){const s=H();return{onBack:()=>{history.back()},onClose:()=>{s.close()}}}});const A=s=>(v("data-v-68ff2994"),s=s(),D(),s),q={class:"example-modal"},x=A(()=>a("div",{class:"head-panel"},[a("h2",{class:"tit"},"안녕하세요!")],-1)),E={class:"foot-actions"},L=A(()=>a("div",{class:"spacer"},null,-1));function M(s,e,t,c,d,h){const o=y("el-button");return _(),m("div",q,[x,a("div",E,[r(o,{type:"danger",onClick:s.onBack},{default:p(()=>[i("history.back")]),_:1},8,["onClick"]),L,r(o,{type:"primary",onClick:s.onClose},{default:p(()=>[i("close")]),_:1},8,["onClick"])])])}const P=f(T,[["render",M],["__scopeId","data-v-68ff2994"]]),B=b({setup(){const s=F({useHistoryStrategy:!0,historyType:1}),e=k(),t=new U,c=new $;return{state:s,onOpen:()=>{e.open({component:P})},onChangeUseStrategy:()=>{s.useHistoryStrategy?e.setUseHistoryStrategy(!0):e.setUseHistoryStrategy(!1)},onChangeType:()=>{s.historyType===1?e.setHistoryStrategy(c):e.setHistoryStrategy(t)}}}});const V={class:"fm"},O={class:"dd"},j={class:"fm"},N={class:"dd"};function J(s,e,t,c,d,h){const o=y("el-checkbox"),l=y("el-radio"),u=y("el-radio-group"),g=y("el-button");return _(),m("div",null,[a("div",V,[a("div",O,[r(o,{modelValue:s.state.useHistoryStrategy,"onUpdate:modelValue":e[0]||(e[0]=n=>s.state.useHistoryStrategy=n),onChange:s.onChangeUseStrategy},{default:p(()=>[i("useHistoryStrategy")]),_:1},8,["modelValue","onChange"])])]),a("div",j,[a("div",N,[r(u,{modelValue:s.state.historyType,"onUpdate:modelValue":e[1]||(e[1]=n=>s.state.historyType=n),onChange:s.onChangeType},{default:p(()=>[r(l,{label:1},{default:p(()=>[i("HistoryStateStrategy")]),_:1}),r(l,{label:2},{default:p(()=>[i("HistoryHashStrategy")]),_:1})]),_:1},8,["modelValue","onChange"])])]),a("div",null,[r(g,{type:"primary",onClick:s.onOpen},{default:p(()=>[i("open")]),_:1},8,["onClick"])])])}const G=f(B,[["render",J],["__scopeId","data-v-ef2e0a61"]]),W=S(`<h1 id="모달의-뒤로가기-처리" tabindex="-1">모달의 뒤로가기 처리 <a class="header-anchor" href="#모달의-뒤로가기-처리" aria-label="Permalink to &quot;모달의 뒤로가기 처리&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>history 뒤로가기 기능은 <strong>history pushState</strong> 또는 <strong>location hash</strong> 를 사용하여 이력을 남깁니다. location 의 변경에 민감할 수 있는 기능이 있다면 사용시 주의 해야합니다.</p><p>history 뒤로가기와 모달을 닫기 기능의 연결은 완벽하지 않습니다. history 에 garbage 가 쌓일 수 있습니다. 앞으로 가기시 모달이 다시 노출되는 기능은 제공하기 어렵고, 앞으로도 제공할 계획이 없습니다.</p></div><h2 id="usehistorystrategy" tabindex="-1">useHistoryStrategy <a class="header-anchor" href="#usehistorystrategy" aria-label="Permalink to &quot;useHistoryStrategy&quot;">​</a></h2><p>history 의 뒤로가기 기능 사용 여부를 결정 합니다. history.back 시 모달이 닫힙니다.</p><p>보통은 초기 provide 하는 단계에서 한번 설정 하겠지만, 필요에 따라 기능을 끄거나 켤 수 있습니다.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">modalService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUseHistoryStrategy</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>기본값은 <strong>true</strong> 입니다.</p></div><h2 id="historystrategy" tabindex="-1">HistoryStrategy <a class="header-anchor" href="#historystrategy" aria-label="Permalink to &quot;HistoryStrategy&quot;">​</a></h2><p>history 의 뒤로가기 기능 사용 여부를 결정 합니다.</p><p>보통은 초기 provide 하는 단계에서 한번 설정 하겠지만, 필요에 따라 기능을 끄거나 켤 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>기본값은 <strong>HistoryStateStrategy</strong> 를 사용합니다.</p></div><h3 id="historystatestrategy" tabindex="-1">HistoryStateStrategy <a class="header-anchor" href="#historystatestrategy" aria-label="Permalink to &quot;HistoryStateStrategy&quot;">​</a></h3><p>history.state 를 사용합니다. 모달이 열려있는 경우 history.state 를 출력해 보면 아래와 같은 정보가 출력 됩니다.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">modalService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setHistoryStrategy</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HistoryStateStrategy</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ... model open ...</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(history</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">state)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// { jdModal: {serviceId: 0, before: null, current: 1669078091817} }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="historyhashstrategy" tabindex="-1">HistoryHashStrategy <a class="header-anchor" href="#historyhashstrategy" aria-label="Permalink to &quot;HistoryHashStrategy&quot;">​</a></h3><p>location.hash 를 사용합니다. 모달이 열릴 때 location.hash 에 이력을 남깁니다. URL 에 hash 정보가 붙습니다.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">modalService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setHistoryStrategy</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HistoryHashStrategy</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ... model open ...</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(location</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ...#jd-modal=1669078091818</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><p>아래 예제를 통해 모달을 열고 history.back 기능을 사용해 보세요.</p>`,19),X=JSON.parse('{"title":"모달의 뒤로가기 처리","description":"","frontmatter":{},"headers":[],"relativePath":"pages/practice/history-back.md","filePath":"pages/practice/history-back.md"}'),z={name:"pages/practice/history-back.md"},Y=Object.assign(z,{setup(s){return(e,t)=>(_(),m("div",null,[W,r(G)]))}});export{X as __pageData,Y as default};
