import{u as v,a as S,H as C}from"./chunks/JdModalEntryEmpty.vue_vue_type_style_index_0_scoped_ff055eb7_lang.ldg4oXNy.js";import{d as b,_ as E,D as c,o as g,c as m,k as a,I as o,w as l,a as p,p as H,q as $,a1 as w,R as F}from"./chunks/framework.Io-i1kqv.js";const I=s=>`jd-modal=${s}`,B=s=>new RegExp(`#${s}$`),_=s=>{const t=s.replace(/(.*(:?#jd-modal=(\d+)))$/,"$3"),e=parseInt(t);return isNaN(e)?null:e};class T{createEntry(t){return A(t)}}const A=({modalRef:s})=>{let t=!1;const e=I(s.id),h=B(e),d=()=>{location.hash=e,t=!0,window.addEventListener("hashchange",i)},y=()=>{window.removeEventListener("hashchange",i),t&&h.test(location.hash)&&history.back()},i=r=>{if(r._preventModalClose||!t||!h.test(r.oldURL))return;const u=_(r.oldURL),k=_(r.newURL);let n=!1;k===null?n=!0:u===null?n=!1:k<u&&(n=!0),n&&s.close()};return{touch:d,pop:y}},D=b({setup(){const s=v();return{onBack:()=>{history.back()},onClose:()=>{s.close()}}}}),f=s=>(H("data-v-68ff2994"),s=s(),$(),s),V={class:"example-modal"},U=f(()=>a("div",{class:"head-panel"},[a("h2",{class:"tit"},"안녕하세요!")],-1)),q={class:"foot-actions"},P=f(()=>a("div",{class:"spacer"},null,-1));function R(s,t,e,h,d,y){const i=c("el-button");return g(),m("div",V,[U,a("div",q,[o(i,{type:"danger",onClick:s.onBack},{default:l(()=>[p("history.back")]),_:1},8,["onClick"]),P,o(i,{type:"primary",onClick:s.onClose},{default:l(()=>[p("close")]),_:1},8,["onClick"])])])}const N=E(D,[["render",R],["__scopeId","data-v-68ff2994"]]),x=b({setup(){const s=w({useHistoryStrategy:!0,historyType:1}),t=S(),e=new T,h=new C;return{state:s,onOpen:()=>{t.open({component:N})},onChangeUseStrategy:()=>{s.useHistoryStrategy?t.setUseHistoryStrategy(!0):t.setUseHistoryStrategy(!1)},onChangeType:()=>{s.historyType===1?t.setHistoryStrategy(h):t.setHistoryStrategy(e)}}}}),L={class:"fm"},M={class:"dd"},j={class:"fm"},O={class:"dd"};function J(s,t,e,h,d,y){const i=c("el-checkbox"),r=c("el-radio"),u=c("el-radio-group"),k=c("el-button");return g(),m("div",null,[a("div",L,[a("div",M,[o(i,{modelValue:s.state.useHistoryStrategy,"onUpdate:modelValue":t[0]||(t[0]=n=>s.state.useHistoryStrategy=n),onChange:s.onChangeUseStrategy},{default:l(()=>[p("useHistoryStrategy")]),_:1},8,["modelValue","onChange"])])]),a("div",j,[a("div",O,[o(u,{modelValue:s.state.historyType,"onUpdate:modelValue":t[1]||(t[1]=n=>s.state.historyType=n),onChange:s.onChangeType},{default:l(()=>[o(r,{label:1},{default:l(()=>[p("HistoryStateStrategy")]),_:1}),o(r,{label:2},{default:l(()=>[p("HistoryHashStrategy")]),_:1})]),_:1},8,["modelValue","onChange"])])]),a("div",null,[o(k,{type:"primary",onClick:s.onOpen},{default:l(()=>[p("open")]),_:1},8,["onClick"])])])}const G=E(x,[["render",J],["__scopeId","data-v-ef2e0a61"]]),W=F(`<h1 id="모달의-뒤로가기-처리" tabindex="-1">모달의 뒤로가기 처리 <a class="header-anchor" href="#모달의-뒤로가기-처리" aria-label="Permalink to &quot;모달의 뒤로가기 처리&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>history 뒤로가기 기능은 <strong>history pushState</strong> 또는 <strong>location hash</strong> 를 사용하여 이력을 남깁니다. location 의 변경에 민감할 수 있는 기능이 있다면 사용시 주의 해야합니다.</p><p>history 뒤로가기와 모달을 닫기 기능의 연결은 완벽하지 않습니다. history 에 garbage 가 쌓일 수 있습니다. 앞으로 가기시 모달이 다시 노출되는 기능은 제공하기 어렵고, 앞으로도 제공할 계획이 없습니다.</p></div><h2 id="usehistorystrategy" tabindex="-1">useHistoryStrategy <a class="header-anchor" href="#usehistorystrategy" aria-label="Permalink to &quot;useHistoryStrategy&quot;">​</a></h2><p>history 의 뒤로가기 기능 사용 여부를 결정 합니다. history.back 시 모달이 닫힙니다.</p><p>보통은 초기 provide 하는 단계에서 한번 설정 하겠지만, 필요에 따라 기능을 끄거나 켤 수 있습니다.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modalService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setUseHistoryStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>기본값은 <strong>true</strong> 입니다.</p></div><h2 id="historystrategy" tabindex="-1">HistoryStrategy <a class="header-anchor" href="#historystrategy" aria-label="Permalink to &quot;HistoryStrategy&quot;">​</a></h2><p>history 의 뒤로가기 기능 사용 여부를 결정 합니다.</p><p>보통은 초기 provide 하는 단계에서 한번 설정 하겠지만, 필요에 따라 기능을 끄거나 켤 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>기본값은 <strong>HistoryStateStrategy</strong> 를 사용합니다.</p></div><h3 id="historystatestrategy" tabindex="-1">HistoryStateStrategy <a class="header-anchor" href="#historystatestrategy" aria-label="Permalink to &quot;HistoryStateStrategy&quot;">​</a></h3><p>history.state 를 사용합니다. 모달이 열려있는 경우 history.state 를 출력해 보면 아래와 같은 정보가 출력 됩니다.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modalService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHistoryStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HistoryStateStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ... model open ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(history.state); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { jdModal: {serviceId: 0, before: null, current: 1669078091817} }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="historyhashstrategy" tabindex="-1">HistoryHashStrategy <a class="header-anchor" href="#historyhashstrategy" aria-label="Permalink to &quot;HistoryHashStrategy&quot;">​</a></h3><p>location.hash 를 사용합니다. 모달이 열릴 때 location.hash 에 이력을 남깁니다. URL 에 hash 정보가 붙습니다.</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modalService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHistoryStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HistoryHashStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ... model open ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location.href); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...#jd-modal=1669078091818</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><p>아래 예제를 통해 모달을 열고 history.back 기능을 사용해 보세요.</p>`,19),X=JSON.parse('{"title":"모달의 뒤로가기 처리","description":"","frontmatter":{},"headers":[],"relativePath":"pages/practice/history-back.md","filePath":"pages/practice/history-back.md"}'),z={name:"pages/practice/history-back.md"},Y=Object.assign(z,{setup(s){return(t,e)=>(g(),m("div",null,[W,o(G)]))}});export{X as __pageData,Y as default};
