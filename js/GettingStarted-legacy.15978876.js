"use strict";(self["webpackChunkdev"]=self["webpackChunkdev"]||[]).push([[496],{8073:function(e,a,n){n.r(a),n.d(a,{default:function(){return M}});var o=n(7875),t=n(349),l=function(e){return(0,o.dD)("data-v-545b3c4c"),e=e(),(0,o.Cn)(),e},d={class:"page-view"},s={class:"panel"},c=l((function(){return(0,o._)("div",{class:"preview-imgs"},[(0,o._)("div",{class:"mg"},[(0,o._)("img",{src:"https://user-images.githubusercontent.com/2731262/90951042-02b50f80-e492-11ea-9290-d0b3ac1ce10e.gif",alt:"@jood/v-modal sample image 1"})]),(0,o._)("div",{class:"mg"},[(0,o._)("img",{src:"https://user-images.githubusercontent.com/2731262/90951211-bec30a00-e493-11ea-88c2-31f3222abad0.gif",alt:"@jood/v-modal sample image 2"})]),(0,o._)("div",{class:"mg"},[(0,o._)("img",{src:"https://user-images.githubusercontent.com/2731262/90951214-c2569100-e493-11ea-8503-ea700f5c48fb.gif",alt:"@jood/v-modal sample image 3"})])],-1)})),i=l((function(){return(0,o._)("div",{class:"panel-desc"},[(0,o._)("p",{class:"pg"}," 패키지의 css 를 적용해야 합니다. css 를 적용할 수 있는 곳이라면 import 하는 위치는 어디라도 상관 없습니다. ")],-1)})),r=(0,o.uE)('<div class="panel-desc" data-v-545b3c4c><ul class="panel-list" data-v-545b3c4c><li data-v-545b3c4c><em data-v-545b3c4c>provideJdModalService</em>는 <em data-v-545b3c4c>JdModalService</em>를 공급(provide)합니다. setup한 하위 부터는 <em data-v-545b3c4c>useJdModalService</em>로 서비스를 주입(inject)하여 사용할 수 있습니다. </li><li data-v-545b3c4c><em data-v-545b3c4c>JdModalProvider</em> 컴포넌트를 추가해 줘야 합니다. 해당 컴포넌트는 모달이 열리는 위치와 UI 를 관리하고 모달로 열리는 컴포넌트에 <em data-v-545b3c4c>JdModalRef</em>를 공급해 줍니다. <br data-v-545b3c4c><em data-v-545b3c4c>useModalRef</em>로 <em data-v-545b3c4c>Ref</em>(Vue의 Ref와는 관련 없음)를 사용할 수 있고, <em data-v-545b3c4c>Ref</em>를 통해 데이터를 전달하거나, 컴포넌트간의 커뮤니케이션을 할 수 있습니다. </li></ul></div>',1),m=(0,o.uE)('<div class="panel-desc" data-v-545b3c4c><p class="pg" data-v-545b3c4c> Container 컴포넌트와 Modal 컴포넌트 간의 커뮤니케이션은 RxJS 의 Observable 을 사용합니다. </p><ul class="panel-list" data-v-545b3c4c><li data-v-545b3c4c><a href="https://rxjs-dev.firebaseapp.com/guide/observable" target="_blank" data-v-545b3c4c>RxJS Observable</a></li><li data-v-545b3c4c><a href="https://medium.com/angular-in-depth/the-best-way-to-unsubscribe-rxjs-observable-in-the-angular-applications-d8f9aa42f6a0" target="_blank" data-v-545b3c4c>The Best Way To Unsubscribe RxJS Observables In The Angular Applications!</a></li></ul><p class="pg" data-v-545b3c4c> 컴포넌트간의 커뮤니케이션 외에도 상태 확인을 위해 몇가지 observable 을 제공합니다. </p><ul class="panel-list" data-v-545b3c4c><li data-v-545b3c4c> JdModalService <em data-v-545b3c4c>observeModalState</em>: 열려있는 모달의 수 등 서비스 상태 변경을 감지할 수 있습니다. </li><li data-v-545b3c4c> JdModalRef <em data-v-545b3c4c>observeClosed</em>: 모달 컴포넌트가 닫힐 때를 감지하고 모달 컴포넌트에서 전달하는 결과를 받을 수 있습니다. </li><li data-v-545b3c4c> JdModalRef <em data-v-545b3c4c>observeOpener</em>: 모달 컴포넌트가 열리거나 닫히는 상태를 감지할 수 있습니다. </li></ul></div>',1),p=l((function(){return(0,o._)("div",{class:"panel-desc"},[(0,o._)("p",{class:"pg"},[(0,o.Uk)(" 모달로 열리는 컴포넌트 및 하위 컴포넌트는 "),(0,o._)("em",null,"JdModalRef"),(0,o.Uk)("이 공급(provide) 되어 있고, "),(0,o._)("em",null,"useJdModalRef"),(0,o.Uk)("로 주입(inject)하여 사용할 수 있습니다. "),(0,o._)("br"),(0,o._)("em",null,"Ref"),(0,o.Uk)("에 접근할 수 있는 모든 곳에서 모달로 전달된 데이터에 접근하거나, 모달을 닫으며 결과를 전달할 수도 있습니다. ")])],-1)}));function v(e,a,n,l,v,u){var b=(0,o.up)("demo-panel"),f=(0,o.up)("demo-panel-devider"),g=(0,o.up)("demo-preview-code");return(0,o.wg)(),(0,o.iD)("div",d,[(0,o._)("div",s,[(0,o.Wm)(b,{class:"panel-imgs",title:"@jood/v-modal"},{default:(0,o.w5)((function(){return[c]})),_:1}),(0,o.Wm)(f),(0,o.Wm)(g,(0,t.vs)((0,o.F4)(e.Codes.install)),null,16),(0,o.Wm)(f),(0,o.Wm)(g,(0,t.vs)((0,o.F4)(e.Codes.main)),null,16),(0,o.Wm)(f,{half:!0}),i,(0,o.Wm)(f),(0,o.Wm)(g,(0,t.vs)((0,o.F4)(e.Codes.app)),null,16),(0,o.Wm)(f,{half:!0}),r,(0,o.Wm)(f),(0,o.Wm)(g,(0,t.vs)((0,o.F4)(e.Codes.someContainer)),null,16),(0,o.Wm)(f,{half:!0}),m,(0,o.Wm)(f),(0,o.Wm)(g,(0,t.vs)((0,o.F4)(e.Codes.someModal)),null,16),(0,o.Wm)(f,{half:!0}),p])])}var u={install:{title:"package install",description:"",lang:"bash",code:"$ npm install @jood/v-modal\n# or $ yarn add @jood/v-modal"},main:{title:"main.ts",description:"",lang:"typescript",code:"import '@jood/v-modal/dist/v-modal.css';"},app:{title:"App.vue",description:"",lang:"html",code:'\n<template>\n  <div id="app">\n    <jd-modal-provider />\n    <router-view />\n  </div>\n</template>\n\n<script lang="ts">\nimport { defineComponent, onUnmounted } from "vue";\nimport { provideJdModalService, JdModalProvider } from "@jood/v-modal";\n\nexport default defineComponent({\n  components: {\n    JdModalProvider\n  },\n  setup() {\n    const modalService = provideJdModalService();\n\n    // if (process.client) { modalService.init(); }\n    modalService.init();\n\n    return {};\n  }\n});\n<\/script>\n    '},someContainer:{title:"MySomeContainer.vue",description:"",lang:"html",code:"\n<template>\n  <div>\n    <button @click=\"onModalOpen\">Modal open</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Subscription } from 'rxjs';\nimport { defineComponent, onUnmounted } from 'vue';\nimport { useJdModalService, StackRight, JdModalRef } from '@jood/v-modal';\nimport MySomeModal from './MySomeModal.vue';\nexport default defineComponent({\n  setup() {\n    const modalService = useJdModalService();\n    const listener = new Subscription();\n    const onModalOpen = () => {\n      const modalRef = modalService.open({\n        component: MySomeModal,\n        overlayClose: true,\n        openStrategy: new StackRight(),\n        data: { passParam1: 'pass data', passParam2: 2 },\n      });\n      const observeResult = modalRef.observeClosed().subscribe((result) => {\n        console.log(result);\n        listener.remove(observeResult);\n      });\n      listener.add(observeResult);\n    };\n    onUnmounted(() => {\n      modalService.closeAll();\n      listener.unsubscribe();\n    });\n    return {\n      onModalOpen,\n    };\n  },\n});\n<\/script>\n"},someModal:{title:"MySomeModal.vue",description:"",lang:"html",code:"\n<template>\n  <div>\n    <h1>foo</h1>\n    <button @click=\"onModalClose\">Modal close</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useJdModalRef } from '@jood/v-modal';\nexport default defineComponent({\n  setup() {\n    const modalRef = useJdModalRef();\n    const myData = modalRef.data;\n    const onModalClose = () => {\n      modalRef.close({\n        passResult1: 'pass to modalRef',\n        passResult2: 2,\n      });\n    };\n    return {\n      onModalClose,\n    };\n  },\n});\n<\/script>\n"}},b=(0,o.aZ)({setup:function(){return{Codes:u}}}),f=n(4407);const g=(0,f.Z)(b,[["render",v],["__scopeId","data-v-545b3c4c"]]);var M=g}}]);